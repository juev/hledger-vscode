{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "hledger",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#directive"
    },
    {
      "include": "#periodic-transaction"
    },
    {
      "include": "#auto-posting"
    },
    {
      "include": "#transaction"
    },
    {
      "include": "#virtual-posting"
    },
    {
      "include": "#posting"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.line",
          "match": "^\\s*;.*$"
        },
        {
          "name": "comment.line",
          "match": "^\\s*#.*$"
        }
      ]
    },
    "directive": {
      "patterns": [
        {
          "name": "keyword.directive.hledger",
          "match": "^(account|commodity|D|decimal-mark|include|P|payee|tag|year|alias|apply account|end apply account|comment|end comment|Y)\\b",
          "captures": {
            "1": {
              "name": "hledger.directive"
            }
          }
        },
        {
          "name": "meta.directive.default-commodity.hledger",
          "match": "^(D)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "hledger.directive"
            },
            "2": {
              "name": "hledger.commodity"
            }
          }
        },
        {
          "name": "meta.directive.include.hledger",
          "match": "^(include)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "hledger.directive"
            },
            "2": {
              "name": "string.quoted"
            }
          }
        },
        {
          "name": "meta.directive.account.hledger",
          "match": "^(account)\\s+([^;]+)(;.*)?$",
          "captures": {
            "1": {
              "name": "hledger.directive"
            },
            "2": {
              "name": "hledger.account"
            },
            "3": {
              "name": "comment.line"
            }
          }
        },
        {
          "name": "meta.directive.alias.hledger",
          "match": "^(alias)\\s+([^=]+)\\s*=\\s*(.*)$",
          "captures": {
            "1": {
              "name": "hledger.directive"
            },
            "2": {
              "name": "hledger.account"
            },
            "3": {
              "name": "hledger.account"
            }
          }
        },
        {
          "name": "meta.directive.commodity.hledger",
          "match": "^(commodity)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "hledger.directive"
            },
            "2": {
              "name": "hledger.commodity"
            }
          }
        }
      ]
    },
    "transaction": {
      "patterns": [
        {
          "name": "meta.transaction.full-date.hledger",
          "begin": "^(\\d{4}[-/.]\\d{1,2}[-/.]\\d{1,2})((?:=\\d{4}[-/.]\\d{1,2}[-/.]\\d{1,2})?)\\s*(\\*|!)?\\s*(\\([^)]+\\))?\\s*([^;]*?)(;.*)?$",
          "beginCaptures": {
            "1": {
              "name": "hledger.date"
            },
            "2": {
              "name": "hledger.date"
            },
            "3": {
              "name": "keyword.operator"
            },
            "4": {
              "name": "entity.name.tag"
            },
            "5": {
              "patterns": [
                {
                  "name": "meta.payee-note.hledger",
                  "match": "([^|]+?)\\s*\\|\\s*(.*)",
                  "captures": {
                    "1": {
                      "name": "hledger.payee"
                    },
                    "2": {
                      "name": "string.unquoted"
                    }
                  }
                },
                {
                  "name": "hledger.payee",
                  "match": ".*"
                }
              ]
            },
            "6": {
              "patterns": [
                {
                  "include": "#comment-tags"
                }
              ]
            }
          },
          "end": "^(?=\\S)|^$",
          "patterns": [
            {
              "include": "#posting"
            },
            {
              "include": "#comment"
            }
          ]
        },
        {
          "name": "meta.transaction.short-date.hledger",
          "begin": "^(\\d{1,2}[-/.]\\d{1,2})((?:=\\d{1,2}[-/.]\\d{1,2})?)\\s*(\\*|!)?\\s*(\\([^)]+\\))?\\s*([^;]*?)(;.*)?$",
          "beginCaptures": {
            "1": {
              "name": "hledger.date"
            },
            "2": {
              "name": "hledger.date"
            },
            "3": {
              "name": "keyword.operator"
            },
            "4": {
              "name": "entity.name.tag"
            },
            "5": {
              "patterns": [
                {
                  "name": "meta.payee-note.hledger",
                  "match": "([^|]+?)\\s*\\|\\s*(.*)",
                  "captures": {
                    "1": {
                      "name": "hledger.payee"
                    },
                    "2": {
                      "name": "string.unquoted"
                    }
                  }
                },
                {
                  "name": "hledger.payee",
                  "match": ".*"
                }
              ]
            },
            "6": {
              "patterns": [
                {
                  "include": "#comment-tags"
                }
              ]
            }
          },
          "end": "^(?=\\S)|^$",
          "patterns": [
            {
              "include": "#posting"
            },
            {
              "include": "#comment"
            }
          ]
        }
      ]
    },
    "posting": {
      "patterns": [
        {
          "name": "meta.posting.hledger",
          "match": "^\\s+(\\S.*?)(?:\\s{2,}|\\t)(.*?)(?:\\s*;(.*))?$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#account-types"
                }
              ]
            },
            "2": {
              "patterns": [
                {
                  "include": "#amount"
                },
                {
                  "include": "#cost-notation"
                },
                {
                  "include": "#assertion"
                }
              ]
            },
            "3": {
              "patterns": [
                {
                  "include": "#comment-tags"
                }
              ]
            }
          }
        },
        {
          "name": "meta.posting.account-only.hledger",
          "match": "^\\s+(\\S[^;]+?)\\s*(?:;(.*))?$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#account-types"
                }
              ]
            },
            "2": {
              "patterns": [
                {
                  "include": "#comment-tags"
                }
              ]
            }
          }
        }
      ]
    },
    "amount": {
      "patterns": [
        {
          "name": "hledger.amount.amount.quoted-commodity.hledger",
          "match": "[-+]?\\d+([.,]\\d+)*\\s*\"[^\"]+\"",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "hledger.amount",
                  "match": "[-+]?\\d+([.,]\\d+)*"
                },
                {
                  "name": "string.quoted.double.commodity.hledger",
                  "match": "\"[^\"]+\""
                }
              ]
            }
          }
        },
        {
          "name": "hledger.amount.amount.quoted-commodity-prefix.hledger",
          "match": "\"[^\"]+\"\\s*[-+]?\\d+([.,]\\d+)*",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "string.quoted.double.commodity.hledger",
                  "match": "\"[^\"]+\""
                },
                {
                  "name": "hledger.amount",
                  "match": "[-+]?\\d+([.,]\\d+)*"
                }
              ]
            }
          }
        },
        {
          "name": "hledger.amount.amount.hledger",
          "match": "[-+]?\\d+([.,]\\d+)*\\s*[A-Za-z0-9$£€¥₹₽₿₩₪₨₦₡₵₺₴₼₢₸₷₶₹₵₫₪₨₽]+",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "hledger.amount",
                  "match": "[-+]?\\d+([.,]\\d+)*"
                },
                {
                  "name": "hledger.commodity",
                  "match": "[A-Za-z0-9$£€¥₹₽₿₩₪₨₦₡₵₺₴₼₢₸₷₶₹₵₫₪₨₽]+"
                }
              ]
            }
          }
        },
        {
          "name": "hledger.amount.amount.hledger",
          "match": "[A-Za-z0-9$£€¥₹₽₿₩₪₨₦₡₵₺₴₼₢₸₷₶₹₵₫₪₨₽]+\\s*[-+]?\\d+([.,]\\d+)*",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "hledger.commodity",
                  "match": "[A-Za-z0-9$£€¥₹₽₿₩₪₨₦₡₵₺₴₼₢₸₷₶₹₵₫₪₨₽]+"
                },
                {
                  "name": "hledger.amount",
                  "match": "[-+]?\\d+([.,]\\d+)*"
                }
              ]
            }
          }
        },
        {
          "name": "hledger.amount.amount-no-commodity.hledger",
          "match": "(?<!\\w)[-+]?\\d+([.,]\\d+)*(?!\\s*[A-Za-z0-9$£€¥₹₽₿₩₪₨₦₡₵₺₴₼₢₸₷₶₹₵₫₪₨₽])(?=\\s|$|;|=)",
          "captures": {
            "0": {
              "name": "hledger.amount"
            }
          }
        }
      ]
    },
    "assertion": {
      "patterns": [
        {
          "name": "keyword.operator.assertion.hledger",
          "match": "=={0,1}\\s*[-+]?\\d+([.,]\\d+)*\\s*[A-Za-z0-9$£€¥₹₽₿₩₪₨₦₡₵₺₴₼₢₸₷₶₹₵₫₪₨₽]+",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "keyword.operator",
                  "match": "=={0,1}"
                },
                {
                  "include": "#amount"
                }
              ]
            }
          }
        },
        {
          "name": "keyword.operator.assertion-no-commodity.hledger",
          "match": "=={0,1}\\s*([-+]?\\d+([.,]\\d+)*)(?!\\s*[A-Za-z0-9$£€¥₹₽₿₩₪₨₦₡₵₺₴₼₢₸₷₶₹₵₫₪₨₽])(?=\\s|$|;)",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "keyword.operator",
                  "match": "=={0,1}"
                },
                {
                  "name": "hledger.amount",
                  "match": "[-+]?\\d+([.,]\\d+)*"
                }
              ]
            }
          }
        }
      ]
    },
    "periodic-transaction": {
      "patterns": [
        {
          "name": "meta.periodic-transaction.hledger",
          "match": "^(~)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "keyword.operator.periodic.hledger"
            },
            "2": {
              "name": "string.quoted.double.period-expression.hledger"
            }
          }
        }
      ]
    },
    "auto-posting": {
      "patterns": [
        {
          "name": "meta.auto-posting.hledger",
          "match": "^(=)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "keyword.operator.auto.hledger"
            },
            "2": {
              "name": "string.quoted.double.query-expression.hledger"
            }
          }
        }
      ]
    },
    "virtual-posting": {
      "patterns": [
        {
          "name": "meta.posting.virtual.hledger",
          "match": "^\\s+(\\([^)]+\\)|\\[[^\\]]+\\])(?:\\s+(.*?))?(?:\\s+(=={1,2}|@{1,2}))?(?:\\s*;(.*))?$",
          "captures": {
            "1": {
              "name": "hledger.account.virtual"
            },
            "2": {
              "patterns": [
                {
                  "include": "#amount"
                },
                {
                  "include": "#cost-notation"
                }
              ]
            },
            "3": {
              "name": "keyword.operator.assertion.hledger"
            },
            "4": {
              "name": "comment.line.semicolon.hledger"
            }
          }
        }
      ]
    },
    "cost-notation": {
      "patterns": [
        {
          "name": "meta.cost.unit.hledger",
          "match": "@\\s*[-+]?\\d+([.,]\\d+)*\\s*[A-Za-z0-9$£€¥₹₽₿₩₪₨₦₡₵₺₴₼₢₸₷₶₹₵₫₪₨₽]*",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "keyword.operator.cost.hledger",
                  "match": "@"
                },
                {
                  "include": "#amount"
                }
              ]
            }
          }
        },
        {
          "name": "meta.cost.total.hledger",
          "match": "@@\\s*[-+]?\\d+([.,]\\d+)*\\s*[A-Za-z0-9$£€¥₹₽₿₩₪₨₦₡₵₺₴₼₢₸₷₶₹₵₫₪₨₽]*",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "keyword.operator.cost.total.hledger",
                  "match": "@@"
                },
                {
                  "include": "#amount"
                }
              ]
            }
          }
        }
      ]
    },
    "account-types": {
      "patterns": [
        {
          "name": "support.class.asset",
          "match": "\\b(Assets|Активы|Asset)\\b.*"
        },
        {
          "name": "support.class.liability",
          "match": "\\b(Liabilities|Пассивы|Liability)\\b.*"
        },
        {
          "name": "support.class.equity",
          "match": "\\b(Equity|Собственные|Собственный)\\b.*"
        },
        {
          "name": "support.class.income",
          "match": "\\b(Income|Revenue|Доходы|Доход)\\b.*"
        },
        {
          "name": "support.class.expense",
          "match": "\\b(Expenses|Расходы|Expense)\\b.*"
        },
        {
          "name": "hledger.account",
          "match": ".*"
        }
      ]
    },
    "comment-tags": {
      "patterns": [
        {
          "name": "comment.line.semicolon.hledger",
          "match": ".*",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "meta.tag",
                  "match": "([a-zA-Z\\u0400-\\u04FF][a-zA-Z\\u0400-\\u04FF0-9_]*)(:)([^\\s,;]+)",
                  "captures": {
                    "1": {
                      "name": "hledger.tag"
                    },
                    "2": {
                      "name": "punctuation.separator"
                    },
                    "3": {
                      "name": "string.unquoted"
                    }
                  }
                },
                {
                  "name": "meta.tag.date",
                  "match": "\\b(date)(:)(\\d{4}[-/.]\\d{1,2}[-/.]\\d{1,2}|\\d{1,2}[-/.]\\d{1,2})",
                  "captures": {
                    "1": {
                      "name": "hledger.tag"
                    },
                    "2": {
                      "name": "punctuation.separator"
                    },
                    "3": {
                      "name": "hledger.date"
                    }
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  "scopeName": "source.hledger"
}