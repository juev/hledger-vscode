{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "hledger",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#directive"
    },
    {
      "include": "#periodic-transaction"
    },
    {
      "include": "#auto-posting"
    },
    {
      "include": "#transaction"
    },
    {
      "include": "#virtual-posting"
    },
    {
      "include": "#posting"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.line.semicolon.hledger",
          "match": "^\\s*;.*$",
          "captures": {
            "0": {
              "patterns": [
                {
                  "include": "#comment-tags"
                }
              ]
            }
          }
        },
        {
          "name": "comment.line.number-sign.hledger", 
          "match": "^\\s*#.*$"
        }
      ]
    },
    "directive": {
      "patterns": [
        {
          "name": "meta.directive.hledger",
          "match": "^(account|commodity|D|decimal-mark|include|P|payee|tag|year|alias|apply account|end apply account|comment|end comment|Y)\\b",
          "captures": {
            "1": {
              "name": "keyword.directive.hledger"
            }
          }
        },
        {
          "name": "meta.directive.default-commodity.hledger",
          "match": "^(D)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "keyword.directive.hledger"
            },
            "2": {
              "name": "entity.name.type.commodity.hledger"
            }
          }
        },
        {
          "name": "meta.directive.include.hledger",
          "match": "^(include)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "keyword.directive.hledger"
            },
            "2": {
              "name": "string.quoted.hledger"
            }
          }
        },
        {
          "name": "meta.directive.account.hledger",
          "match": "^(account)\\s+([^;]+)(;.*)?$",
          "captures": {
            "1": {
              "name": "keyword.directive.hledger"
            },
            "2": {
              "name": "entity.name.function.account.defined.hledger"
            },
            "3": {
              "patterns": [
                {
                  "include": "#comment-tags"
                }
              ]
            }
          }
        },
        {
          "name": "meta.directive.alias.hledger",
          "match": "^(alias)\\s+([^=]+)\\s*=\\s*(.*)$",
          "captures": {
            "1": {
              "name": "keyword.directive.hledger"
            },
            "2": {
              "name": "entity.name.function.account.hledger"
            },
            "3": {
              "name": "entity.name.function.account.hledger"
            }
          }
        },
        {
          "name": "meta.directive.commodity.hledger",
          "match": "^(commodity)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "keyword.directive.hledger"
            },
            "2": {
              "name": "entity.name.type.commodity.defined.hledger"
            }
          }
        },
        {
          "name": "meta.directive.price.hledger",
          "match": "^(P)\\s+(\\d{4}[-/.]\\d{1,2}[-/.]\\d{1,2}|\\d{1,2}[-/.]\\d{1,2})\\s+([^\\s]+)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "keyword.directive.hledger"
            },
            "2": {
              "name": "constant.numeric.date.hledger"
            },
            "3": {
              "name": "entity.name.type.commodity.hledger"
            },
            "4": {
              "patterns": [
                {
                  "include": "#amount"
                }
              ]
            }
          }
        }
      ]
    },
    "transaction": {
      "patterns": [
        {
          "name": "meta.transaction.full-date.hledger",
          "begin": "^(\\d{4}[-/.]\\d{1,2}[-/.]\\d{1,2})((?:=\\d{4}[-/.]\\d{1,2}[-/.]\\d{1,2})?)\\s*(\\*|!)?\\s*(\\([^)]+\\))?\\s*([^;]*?)(;.*)?$",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric.date.hledger"
            },
            "2": {
              "name": "constant.numeric.date.secondary.hledger"
            },
            "3": {
              "name": "keyword.operator.status.hledger"
            },
            "4": {
              "name": "entity.name.tag.code.hledger"
            },
            "5": {
              "patterns": [
                {
                  "name": "meta.payee-note.hledger",
                  "match": "([^|]+?)\\s*\\|\\s*(.*)",
                  "captures": {
                    "1": {
                      "name": "entity.name.tag.payee.hledger"
                    },
                    "2": {
                      "name": "string.unquoted.note.hledger"
                    }
                  }
                },
                {
                  "name": "entity.name.tag.payee.hledger",
                  "match": ".*"
                }
              ]
            },
            "6": {
              "patterns": [
                {
                  "include": "#comment-tags"
                }
              ]
            }
          },
          "end": "^(?=\\S)|^$",
          "patterns": [
            {
              "include": "#posting"
            },
            {
              "include": "#comment"
            }
          ]
        },
        {
          "name": "meta.transaction.short-date.hledger",
          "begin": "^(\\d{1,2}[-/.]\\d{1,2})((?:=\\d{1,2}[-/.]\\d{1,2})?)\\s*(\\*|!)?\\s*(\\([^)]+\\))?\\s*([^;]*?)(;.*)?$",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric.date.hledger"
            },
            "2": {
              "name": "constant.numeric.date.secondary.hledger"
            },
            "3": {
              "name": "keyword.operator.status.hledger"
            },
            "4": {
              "name": "entity.name.tag.code.hledger"
            },
            "5": {
              "patterns": [
                {
                  "name": "meta.payee-note.hledger",
                  "match": "([^|]+?)\\s*\\|\\s*(.*)",
                  "captures": {
                    "1": {
                      "name": "entity.name.tag.payee.hledger"
                    },
                    "2": {
                      "name": "string.unquoted.note.hledger"
                    }
                  }
                },
                {
                  "name": "entity.name.tag.payee.hledger",
                  "match": ".*"
                }
              ]
            },
            "6": {
              "patterns": [
                {
                  "include": "#comment-tags"
                }
              ]
            }
          },
          "end": "^(?=\\S)|^$",
          "patterns": [
            {
              "include": "#posting"
            },
            {
              "include": "#comment"
            }
          ]
        }
      ]
    },
    "posting": {
      "patterns": [
        {
          "name": "meta.posting.with-amount.hledger",
          "match": "^\\s+(\\S.*?)\\s{2,}([^;]+?)\\s*(;.*)?$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#account-types"
                }
              ]
            },
            "2": {
              "name": "meta.amount-section.hledger",
              "patterns": [
                {
                  "include": "#amount"
                },
                {
                  "include": "#cost-notation"
                },
                {
                  "include": "#assertion"
                }
              ]
            },
            "3": {
              "name": "comment.line.semicolon.hledger",
              "patterns": [
                {
                  "include": "#comment-content"
                }
              ]
            }
          }
        },
        {
          "name": "meta.posting.with-tab-amount.hledger",
          "match": "^\\s+(\\S.*?)\\t+([^;]+?)\\s*(;.*)?$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#account-types"
                }
              ]
            },
            "2": {
              "name": "meta.amount-section.hledger",
              "patterns": [
                {
                  "include": "#amount"
                },
                {
                  "include": "#cost-notation"
                },
                {
                  "include": "#assertion"
                }
              ]
            },
            "3": {
              "name": "comment.line.semicolon.hledger",
              "patterns": [
                {
                  "include": "#comment-content"
                }
              ]
            }
          }
        },
        {
          "name": "meta.posting.account-only.hledger",
          "match": "^\\s+(\\S[^;]+?)\\s*(;.*)?$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#account-types"
                }
              ]
            },
            "2": {
              "name": "comment.line.semicolon.hledger",
              "patterns": [
                {
                  "include": "#comment-content"
                }
              ]
            }
          }
        }
      ]
    },
    "amount": {
      "patterns": [
        {
          "name": "meta.amount.quoted-commodity.hledger",
          "match": "([-+]?\\d+(?:[.,]\\d+)*)\\s*(\"[^\"]+\")",
          "captures": {
            "1": {
              "name": "constant.numeric.amount.hledger"
            },
            "2": {
              "name": "entity.name.type.commodity.quoted.hledger"
            }
          }
        },
        {
          "name": "meta.amount.quoted-commodity-prefix.hledger",
          "match": "(\"[^\"]+\")\\s*([-+]?\\d+(?:[.,]\\d+)*)",
          "captures": {
            "1": {
              "name": "entity.name.type.commodity.quoted.hledger"
            },
            "2": {
              "name": "constant.numeric.amount.hledger"
            }
          }
        },
        {
          "name": "meta.amount.commodity-suffix.hledger",
          "match": "([-+]?\\d+(?:[.,]\\d+)*)\\s+([A-Za-z0-9$£€¥₹₽₿₩₪₨₦₡₵₺₴₼₢₸₷₶₹₵₫₪₨₽]+)(?=\\s|$|;|@|=)",
          "captures": {
            "1": {
              "name": "constant.numeric.amount.hledger"
            },
            "2": {
              "name": "entity.name.type.commodity.hledger"
            }
          }
        },
        {
          "name": "meta.amount.commodity-prefix.hledger",
          "match": "([A-Za-z0-9$£€¥₹₽₿₩₪₨₦₡₵₺₴₼₢₸₷₶₹₵₫₪₨₽]+)\\s+([-+]?\\d+(?:[.,]\\d+)*)(?=\\s|$|;|@|=)",
          "captures": {
            "1": {
              "name": "entity.name.type.commodity.hledger"
            },
            "2": {
              "name": "constant.numeric.amount.hledger"
            }
          }
        },
        {
          "name": "constant.numeric.amount.hledger",
          "match": "(?<!\\w)[-+]?\\d+(?:[.,]\\d+)*(?=\\s*(?:;|$|@|=))"
        }
      ]
    },
    "assertion": {
      "patterns": [
        {
          "name": "meta.assertion.hledger",
          "match": "(=={0,1})\\s*(.+)",
          "captures": {
            "1": {
              "name": "keyword.operator.assertion.hledger"
            },
            "2": {
              "patterns": [
                {
                  "include": "#amount"
                }
              ]
            }
          }
        }
      ]
    },
    "periodic-transaction": {
      "patterns": [
        {
          "name": "meta.periodic-transaction.hledger",
          "match": "^(~)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "keyword.operator.periodic.hledger"
            },
            "2": {
              "name": "string.unquoted.period-expression.hledger"
            }
          }
        }
      ]
    },
    "auto-posting": {
      "patterns": [
        {
          "name": "meta.auto-posting.hledger",
          "match": "^(=)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "keyword.operator.auto.hledger"
            },
            "2": {
              "name": "string.unquoted.query-expression.hledger"
            }
          }
        }
      ]
    },
    "virtual-posting": {
      "patterns": [
        {
          "name": "meta.posting.virtual.hledger",
          "match": "^\\s+((\\([^)]+\\))|(\\[[^\\]]+\\]))(?:\\s+(.*?))?(?:\\s*;(.*))?$",
          "captures": {
            "1": {
              "name": "entity.name.function.account.virtual.hledger"
            },
            "4": {
              "patterns": [
                {
                  "include": "#amount"
                },
                {
                  "include": "#cost-notation"
                },
                {
                  "include": "#assertion"
                }
              ]
            },
            "5": {
              "patterns": [
                {
                  "include": "#comment-tags"
                }
              ]
            }
          }
        }
      ]
    },
    "cost-notation": {
      "patterns": [
        {
          "name": "meta.cost.unit.hledger",
          "match": "(@)\\s*(.+?)(?=\\s*(?:;|$|=))",
          "captures": {
            "1": {
              "name": "keyword.operator.cost.hledger"
            },
            "2": {
              "patterns": [
                {
                  "include": "#amount"
                }
              ]
            }
          }
        },
        {
          "name": "meta.cost.total.hledger",
          "match": "(@@)\\s*(.+?)(?=\\s*(?:;|$|=))",
          "captures": {
            "1": {
              "name": "keyword.operator.cost.total.hledger"
            },
            "2": {
              "patterns": [
                {
                  "include": "#amount"
                }
              ]
            }
          }
        }
      ]
    },
    "account-types": {
      "patterns": [
        {
          "name": "entity.name.function.account.asset.hledger",
          "match": "\\b(Assets?|Активы?)\\b.*"
        },
        {
          "name": "entity.name.function.account.liability.hledger",
          "match": "\\b(Liabilit(y|ies)|Пассивы?)\\b.*"
        },
        {
          "name": "entity.name.function.account.equity.hledger",
          "match": "\\b(Equity|Собственны[ей]|Капитал)\\b.*"
        },
        {
          "name": "entity.name.function.account.income.hledger",
          "match": "\\b(Income|Revenue|Доходы?)\\b.*"
        },
        {
          "name": "entity.name.function.account.expense.hledger",
          "match": "\\b(Expenses?|Расходы?)\\b.*"
        },
        {
          "name": "entity.name.function.account.hledger",
          "match": ".*"
        }
      ]
    },
    "comment-tags": {
      "patterns": [
        {
          "name": "comment.line.semicolon.hledger",
          "match": ";\\s*(.*)$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#comment-content"
                }
              ]
            }
          }
        }
      ]
    },
    "comment-content": {
      "patterns": [
        {
          "name": "meta.tag.hledger",
          "match": "([a-zA-Z\\u0400-\\u04FF][a-zA-Z\\u0400-\\u04FF0-9_]*)(:)([^\\s,;]+)",
          "captures": {
            "1": {
              "name": "entity.name.tag.hledger"
            },
            "2": {
              "name": "punctuation.separator.key-value.hledger"
            },
            "3": {
              "name": "string.unquoted.tag-value.hledger"
            }
          }
        },
        {
          "name": "meta.tag.date.hledger",
          "match": "\\b(date)(:)(\\d{4}[-/.]\\d{1,2}[-/.]\\d{1,2}|\\d{1,2}[-/.]\\d{1,2})",
          "captures": {
            "1": {
              "name": "entity.name.tag.hledger"
            },
            "2": {
              "name": "punctuation.separator.key-value.hledger"
            },
            "3": {
              "name": "constant.numeric.date.hledger"
            }
          }
        },
        {
          "name": "comment.block.content.hledger",
          "match": ".*"
        }
      ]
    }
  },
  "scopeName": "source.hledger"
}