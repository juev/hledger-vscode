{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "hledger",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#directive"
    },
    {
      "include": "#transaction"
    },
    {
      "include": "#posting"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.line",
          "match": "^\\s*;.*$"
        },
        {
          "name": "comment.line",
          "match": "^\\s*#.*$"
        }
      ]
    },
    "directive": {
      "patterns": [
        {
          "name": "keyword.directive.hledger",
          "match": "^(account|commodity|D|include|P|year|alias|apply account|end apply account|comment|end comment|Y)\\b",
          "captures": {
            "1": {
              "name": "keyword.control"
            }
          }
        },
        {
          "name": "meta.directive.default-commodity.hledger",
          "match": "^(D)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "entity.name.type"
            }
          }
        },
        {
          "name": "meta.directive.include.hledger",
          "match": "^(include)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "string.quoted"
            }
          }
        },
        {
          "name": "meta.directive.account.hledger",
          "match": "^(account)\\s+([^;]+)(;.*)?$",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "entity.name.function"
            },
            "3": {
              "name": "comment.line"
            }
          }
        },
        {
          "name": "meta.directive.alias.hledger",
          "match": "^(alias)\\s+([^=]+)\\s*=\\s*(.*)$",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "entity.name.function"
            },
            "3": {
              "name": "entity.name.function"
            }
          }
        },
        {
          "name": "meta.directive.commodity.hledger",
          "match": "^(commodity)\\s+(.*)$",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "entity.name.type"
            }
          }
        }
      ]
    },
    "transaction": {
      "patterns": [
        {
          "name": "meta.transaction.full-date.hledger",
          "begin": "^(\\d{4}[-/]\\d{1,2}[-/]\\d{1,2})((?:=\\d{4}[-/]\\d{1,2}[-/]\\d{1,2})?)\\s*(\\*|!)?\\s*(\\([^)]+\\))?\\s*(.*?)(?:\\s{2,}|\\t|$)(;.*)?$",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric"
            },
            "2": {
              "name": "constant.numeric"
            },
            "3": {
              "name": "keyword.operator"
            },
            "4": {
              "name": "entity.name.tag"
            },
            "5": {
              "name": "string.unquoted"
            },
            "6": {
              "name": "comment.line"
            }
          },
          "end": "^(?=\\S)|^$",
          "patterns": [
            {
              "include": "#posting"
            },
            {
              "include": "#comment"
            }
          ]
        },
        {
          "name": "meta.transaction.short-date.hledger",
          "begin": "^(\\d{1,2}[-/]\\d{1,2})((?:=\\d{1,2}[-/]\\d{1,2})?)\\s*(\\*|!)?\\s*(\\([^)]+\\))?\\s*(.*?)(?:\\s{2,}|\\t|$)(;.*)?$",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric"
            },
            "2": {
              "name": "constant.numeric"
            },
            "3": {
              "name": "keyword.operator"
            },
            "4": {
              "name": "entity.name.tag"
            },
            "5": {
              "name": "string.unquoted"
            },
            "6": {
              "name": "comment.line"
            }
          },
          "end": "^(?=\\S)|^$",
          "patterns": [
            {
              "include": "#posting"
            },
            {
              "include": "#comment"
            }
          ]
        }
      ]
    },
    "posting": {
      "patterns": [
        {
          "name": "meta.posting.hledger",
          "match": "^\\s+(\\S.*?)(?:\\s{2,}|\\t)(.*?)(?:\\s*;(.*))?$",
          "captures": {
            "1": {
              "name": "entity.name.function"
            },
            "2": {
              "patterns": [
                {
                  "include": "#amount"
                },
                {
                  "include": "#assertion"
                }
              ]
            },
            "3": {
              "name": "comment.line.semicolon.hledger"
            }
          }
        },
        {
          "name": "meta.posting.account-only.hledger",
          "match": "^\\s+(\\S[^;]+?)\\s*(?:;(.*))?$",
          "captures": {
            "1": {
              "name": "entity.name.function"
            },
            "2": {
              "name": "comment.line.semicolon.hledger"
            }
          }
        }
      ]
    },
    "amount": {
      "patterns": [
        {
          "name": "constant.numeric.amount.hledger",
          "match": "[-+]?\\d+([.,]\\d+)*\\s*[A-Za-z$£€¥₹]+",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "constant.numeric",
                  "match": "[-+]?\\d+([.,]\\d+)*"
                },
                {
                  "name": "entity.name.type",
                  "match": "[A-Za-z$£€¥₹]+"
                }
              ]
            }
          }
        },
        {
          "name": "constant.numeric.amount.hledger",
          "match": "[A-Za-z$£€¥₹]+\\s*[-+]?\\d+([.,]\\d+)*",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "entity.name.type",
                  "match": "[A-Za-z$£€¥₹]+"
                },
                {
                  "name": "constant.numeric",
                  "match": "[-+]?\\d+([.,]\\d+)*"
                }
              ]
            }
          }
        },
        {
          "name": "constant.numeric.amount-no-commodity.hledger",
          "match": "(?<!\\w)[-+]?\\d+([.,]\\d+)*(?!\\s*[A-Za-z$£€¥₹])(?=\\s|$|;|=)",
          "captures": {
            "0": {
              "name": "constant.numeric.hledger"
            }
          }
        }
      ]
    },
    "assertion": {
      "patterns": [
        {
          "name": "keyword.operator.assertion.hledger",
          "match": "=\\s*[-+]?\\d+([.,]\\d+)*\\s*[A-Za-z$£€¥₹]+",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "keyword.operator",
                  "match": "="
                },
                {
                  "include": "#amount"
                }
              ]
            }
          }
        },
        {
          "name": "keyword.operator.assertion-no-commodity.hledger",
          "match": "=\\s*([-+]?\\d+([.,]\\d+)*)(?!\\s*[A-Za-z$£€¥₹])(?=\\s|$|;)",
          "captures": {
            "0": {
              "patterns": [
                {
                  "name": "keyword.operator",
                  "match": "="
                },
                {
                  "name": "constant.numeric",
                  "match": "[-+]?\\d+([.,]\\d+)*"
                }
              ]
            }
          }
        }
      ]
    }
  },
  "scopeName": "source.hledger"
}